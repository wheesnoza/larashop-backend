version: '3'

networks:
  laravel:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME:-laravel}_nginx
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html
      - .docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - db
    networks:
      - laravel

  db:
    container_name: ${APP_NAME:-laravel}_db
    image: mysql:5.7
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - .docker/mysql/storage:/var/lib/mysql
      - .docker/mysql/init:/docker-entrypoint-initdb.d/
      - .docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_DATABASE: ${APP_NAME:-laravel}
      MYSQL_USER: root
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  app:
    build:
     context: .
     dockerfile: .docker/php/Dockerfile
    container_name: ${APP_NAME:-laravel}_app
    volumes:
      - .:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel

  npm:
    image: node:13.7
    container_name: ${APP_NAME:-laravel}_npm
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  redis:
    image: redis:latest
    container_name: ${APP_NAME:-laravel}_redis
    tty: true
    volumes:
      - .docker/redis/storage:/data
    ports:
      - 6379:6379
    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: ${APP_NAME:-laravel}_composer
    volumes:
    - .:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel
